/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-next-name: 'icon-next';
$icon-next-x: 180px;
$icon-next-y: 0px;
$icon-next-offset-x: -180px;
$icon-next-offset-y: 0px;
$icon-next-width: 50px;
$icon-next-height: 50px;
$icon-next-total-width: 230px;
$icon-next-total-height: 230px;
$icon-next-image: '../images/portal-icons.png';
$icon-next: (180px, 0px, -180px, 0px, 50px, 50px, 230px, 230px, '../images/portal-icons.png', 'icon-next', );
$icon-pre-name: 'icon-pre';
$icon-pre-x: 180px;
$icon-pre-y: 70px;
$icon-pre-offset-x: -180px;
$icon-pre-offset-y: -70px;
$icon-pre-width: 50px;
$icon-pre-height: 50px;
$icon-pre-total-width: 230px;
$icon-pre-total-height: 230px;
$icon-pre-image: '../images/portal-icons.png';
$icon-pre: (180px, 70px, -180px, -70px, 50px, 50px, 230px, 230px, '../images/portal-icons.png', 'icon-pre', );
$next-hover-name: 'next-hover';
$next-hover-x: 0px;
$next-hover-y: 180px;
$next-hover-offset-x: 0px;
$next-hover-offset-y: -180px;
$next-hover-width: 50px;
$next-hover-height: 50px;
$next-hover-total-width: 230px;
$next-hover-total-height: 230px;
$next-hover-image: '../images/portal-icons.png';
$next-hover: (0px, 180px, 0px, -180px, 50px, 50px, 230px, 230px, '../images/portal-icons.png', 'next-hover', );
$pre-hover-name: 'pre-hover';
$pre-hover-x: 70px;
$pre-hover-y: 180px;
$pre-hover-offset-x: -70px;
$pre-hover-offset-y: -180px;
$pre-hover-width: 50px;
$pre-hover-height: 50px;
$pre-hover-total-width: 230px;
$pre-hover-total-height: 230px;
$pre-hover-image: '../images/portal-icons.png';
$pre-hover: (70px, 180px, -70px, -180px, 50px, 50px, 230px, 230px, '../images/portal-icons.png', 'pre-hover', );
$wechat-name: 'wechat';
$wechat-x: 0px;
$wechat-y: 0px;
$wechat-offset-x: 0px;
$wechat-offset-y: 0px;
$wechat-width: 70px;
$wechat-height: 70px;
$wechat-total-width: 230px;
$wechat-total-height: 230px;
$wechat-image: '../images/portal-icons.png';
$wechat: (0px, 0px, 0px, 0px, 70px, 70px, 230px, 230px, '../images/portal-icons.png', 'wechat', );
$wechat-hover-name: 'wechat_hover';
$wechat-hover-x: 90px;
$wechat-hover-y: 0px;
$wechat-hover-offset-x: -90px;
$wechat-hover-offset-y: 0px;
$wechat-hover-width: 70px;
$wechat-hover-height: 70px;
$wechat-hover-total-width: 230px;
$wechat-hover-total-height: 230px;
$wechat-hover-image: '../images/portal-icons.png';
$wechat-hover: (90px, 0px, -90px, 0px, 70px, 70px, 230px, 230px, '../images/portal-icons.png', 'wechat_hover', );
$weibo-name: 'weibo';
$weibo-x: 0px;
$weibo-y: 90px;
$weibo-offset-x: 0px;
$weibo-offset-y: -90px;
$weibo-width: 70px;
$weibo-height: 70px;
$weibo-total-width: 230px;
$weibo-total-height: 230px;
$weibo-image: '../images/portal-icons.png';
$weibo: (0px, 90px, 0px, -90px, 70px, 70px, 230px, 230px, '../images/portal-icons.png', 'weibo', );
$weibo-hover-name: 'weibo_hover';
$weibo-hover-x: 90px;
$weibo-hover-y: 90px;
$weibo-hover-offset-x: -90px;
$weibo-hover-offset-y: -90px;
$weibo-hover-width: 70px;
$weibo-hover-height: 70px;
$weibo-hover-total-width: 230px;
$weibo-hover-total-height: 230px;
$weibo-hover-image: '../images/portal-icons.png';
$weibo-hover: (90px, 90px, -90px, -90px, 70px, 70px, 230px, 230px, '../images/portal-icons.png', 'weibo_hover', );
$spritesheet-width: 230px;
$spritesheet-height: 230px;
$spritesheet-image: '../images/portal-icons.png';
$spritesheet-sprites: ($icon-next, $icon-pre, $next-hover, $pre-hover, $wechat, $wechat-hover, $weibo, $weibo-hover, );
$spritesheet: (230px, 230px, '../images/portal-icons.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
